NAME
    Cache::Pluggable - pluggable cache interface

SYNOPSIS
      package Proj::Cache;
      use Mouse;
      extends 'Cache::Pluggable';

      with qw(Cache::Pluggable::Plugin::Namespace);

      __PACKAGE__->meta->make_immutable();

      package main;
      use strict;
      use warnings;
      use Cache::Memcached::Fast;

      my $cache = Proj::Cache->new(
        cache => Cache::Memcached::Fast->new(
            servers => [{ address => 'localhost:11211', weight => 1 }],
            namespace => 'proj:',
        ),
      );
      my $value = $cache->get({ key => $key });
      $cache->set(key => $key, value => $value, expires_in => 60);

DESCRIPTION
    You would like to wrap CPAN's Cache::XXX libraries a bit. This library
    help you to write some modules and reuse it.

METHODS
    my $cache = Proj::Cache->new(%args);
        %args is followings:

        cache: Object ( required )
            Cache::xxx object like Cache::Memcached::Fast.

    my $value = $cache->get($hash_ref);
        yet anothor get interface for extend get interface. (recommend)

        $hash_ref are followings:

        key: Str ( required )
                key name to get.

    my $value = $cache->get($key);
        many Cache:: library has this interface. But, It's hard to extend.
        So, $hash_ref is recommend.

    $cache->set($hash_ref);
        $hash_ref is followings:

        key: Str ( required )
        value: Str ( required )
        expires_in: Int ( optional )
            expires_in in N seconds.

    $cache->set($key, $value, $expire);
        many Cache:: library has this intercace. But, It's hard to extend.
        So, $hash_ref is recommend.

TESTED cache module.
    Cahce::Pluggable work with followings: +<Cahce::Memcached::Fast>

AUTHOR
    Keiji Yoshimi <walf443 at gmail dot com>

SEE ALSO
    +<CLI>

    +<Cache::Cache>

LICENSE
    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

